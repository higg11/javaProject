<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.mapper.SalesMapper">
	<!-- <resultMap type="orderDTO" id="HashMap">
	<result property="order_num" column="order_num" />
	<result property="order_date" column="order_date" />
	
	<result property="qty_ordered" column="qty_ordered" />
	<result property="price_each" column="price_each" />
</resultMap>	
	
	<select id="getIncome" resultType="HashMap">
		SELECT A.order_num, A.order_date, SUM(B.qty_ordered*B.price_each) sum 
		FROM tbl_order A 
		LEFT JOIN orderDetail B
		ON A.order_num = B.order_num
		GROUP BY 1
		ORDER BY 1;		
	</select> -->
	
	<!-- 매출관리페이지 - 매출관리 정보 가져오기  -->
	 <sql id="criteria">
	    <where>
	        <!-- 주문번호 -->
	        <if test="searchType == 'S'.toString()">
	            A.order_num = #{keyword}
	        </if>
	        <!-- 상품명 -->
	        <if test="searchType == 'C'.toString()">
	            C.pname LIKE CONCAT('%', #{keyword}, '%')
	        </if>
	        <!-- 주문일 -->
	        <if test="searchType == 'W'.toString()">
	           <!--  A.order_date LIKE CONCAT('%', #{keyword}, '%') -->
	            DATE_FORMAT(A.order_date, '%Y-%m-%d') = #{keyword}
	        </if>
	    </where>
	</sql>	
	<select id="salesInfo" resultType="orderDTO">
		SELECT A.order_num, A.order_date, A.id, B.quantity, B.unitPrice, C.pname				
		FROM tbl_order A
		LEFT JOIN tbl_orderDetail B ON A.order_num = B.order_num
		LEFT JOIN tbl_product C ON B.pnum = C.pnum
		<include refid="criteria"></include>
		ORDER BY A.order_date DESC
		LIMIT #{startIndex}, #{cntPerPage}
	</select>
	
	<!-- 날짜 범위 지정 검색  -->
	<select id="salesInfoPeriod" resultType="orderDTO">	    
	    SELECT A.order_num, A.order_date, A.id, B.quantity, B.unitPrice, C.pname				
		FROM tbl_order A
		LEFT JOIN tbl_orderDetail B ON A.order_num = B.order_num
		LEFT JOIN tbl_product C ON B.pnum = C.pnum
		WHERE A.order_date BETWEEN #{startDate} AND DATE_ADD(#{endDate}, INTERVAL 1 DAY)
		ORDER BY A.order_date
	    <!-- LIMIT #{startIndex}, #{cntPerPage} -->
	</select>
	
	 <!-- 검색어 있을 때 전체 게시글 수 -->
	  <select id="totalCnt" resultType="Integer">
	  	SELECT count(*) 
		FROM tbl_order A
		LEFT JOIN tbl_orderDetail B ON A.order_num = B.order_num
		LEFT JOIN tbl_product C ON B.pnum = C.pnum
		<include refid="criteria"></include>
		ORDER BY A.order_date	  	
	  </select>
	
	<!-- 매출관리페이지 - 오늘매출 상세보기  -->
	<select id="todayAjaxList" resultType="orderDTO">
		SELECT order_num, id, total_amount			
		FROM tbl_order
		WHERE DATE_FORMAT(order_date, '%y-%m-%d') = DATE_FORMAT(now(), '%y-%m-%d');
	</select>
	
	<!-- 매출관리페이지 - 일매출 차트(한달단위) -->
	<select id="dailyPurchaseChart" resultType="orderDTO">
		WITH RECURSIVE A AS (
		    SELECT 0 AS LEVEL
		    UNION ALL
		    SELECT A.LEVEL + 1
		    FROM A
		    WHERE A.LEVEL <![CDATA[<]]> DAY(LAST_DAY(NOW())) - 1
			),
			DAILY_PURCHASE AS (
			    SELECT DATE_FORMAT(order_date, "%Y-%m-%d") AS order_date, SUM(total_amount) AS PURCHASE_AMOUNT
				FROM tbl_order
				GROUP BY DATE_FORMAT(order_date, "%Y-%m-%d")
			)
		SELECT DATE_FORMAT(DATE_SEQ.date, "%Y-%m-%d") AS order_date,
		    IFNULL(DP.PURCHASE_AMOUNT, 0) AS purchase_amount
		FROM (SELECT ADDDATE(DATE_FORMAT(NOW(), '%Y-%m-01'), INTERVAL LEVEL DAY) AS date FROM A) DATE_SEQ
		LEFT JOIN DAILY_PURCHASE DP
		ON DATE_SEQ.date = DP.order_date
		WHERE DATE_FORMAT(DATE_SEQ.date, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m')
		ORDER BY DATE_SEQ.date;
	</select>
	
	<!-- 매출관리페이지 월선택 30일 매출데이터  -->
	<!-- <select id="getSalesDataForPeriod" resultType="orderDTO">
	    SELECT DATE(order_date) AS date, SUM(price_each * qty_ordered) AS sales
	    SELECT A.order_date, SUM(A.qty_ordered * A.price_each) AS PURCHASE_AMOUNT
	    FROM tbl_order A
	    WHERE A.order_date BETWEEN #{startDate} AND #{endDate}
	    GROUP BY DATE(order_date)
	    ORDER BY DATE(order_date)
	</select> -->
	
	<!-- 매출관리페이지 - 오늘매출 상세정보 -->
	<!-- <select id="todayPurchaseInfo" resultType="orderDTO">
		SELECT A.order_num, A.order_date, B.qty_ordered, B.price_each, C.pname,
		SUM(B.qty_ordered*B.price_each) AS TODAY_PURCHASE_AMOUNT				
		FROM tbl_order A
		LEFT JOIN orderDetail B ON A.order_num = B.order_num
		LEFT JOIN product_info C ON B.pcode = C.pcategory_fk
		WHERE DATE_FORMAT(A.order_date, '%y-%m-%d') = DATE_FORMAT(now(), '%y-%m-%d')
	</select> -->
	
	
</mapper>



